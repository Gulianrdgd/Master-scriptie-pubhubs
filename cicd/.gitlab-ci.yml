variables:
  DOCKER_DRIVER: overlay # faster docker builds, see https://gitlab.com/gitlab-org/gitlab-ce/issues/21374

before_script:
  - ENV_FILE="pubhubs/.${CI_COMMIT_REF_NAME}.env"
  - test -f ${ENV_FILE} && source ${ENV_FILE} # 'source ${ENV_FILE} || true' does not work on busybox

# For more information, see: https://docs.gitlab.com/ee/ci/yaml/index.html#stages
stages: # List of stages for jobs, and their order of execution
  - build
  - build-images
  - deploy

.exceptdoc: &exceptdoc
  except:
    changes: &changesdoc
      - docs/*
      - README.md
      - LICENSE


.rustchanges: &rustchanges
  changes:
    - pubhubs/*
    - cicd/.gitlab-ci.yml

.phc_image_changes: &phc_image_changes
  changes:
    - pubhubs/*
    - global-client/* # global client is included in PHC image
    - hub-client/* # global client depends on hub-client
    - cicd/.gitlab-ci.yml

.hubclientchanges: &hubclientchanges
  changes:
    - hub-client/*
    - cicd/.gitlab-ci.yml

.hubchanges: &hubchanges
  changes:
    - pubhubs_hub/*
    - cicd/.gitlab-ci.yml

rust-clippy:
  stage: build
  tags:
    - docker
  image: registry.science.ru.nl/ilab/docker-build/rust-nightly:main
  script:
    - cd pubhubs
    # twice, because sometimes clippy has hard errors, and won't produce the report
    - cargo +nightly clippy
    - cargo +nightly clippy --message-format=json | gitlab-report -p clippy > gl-code-quality-report.json
  artifacts:
    reports:
      codequality: pubhubs/gl-code-quality-report.json
    expire_in: 1 week
  rules:
    - if: "$CODE_QUALITY_DISABLED"
      when: never
    - if: '$CI_PIPELINE_SOURCE != "push"'
      when: never
    - *rustchanges
  cache:
    key: "${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    paths:
      - pubhubs/target/

rust-unit-test:
  stage: build
  tags:
    - docker
  only: *rustchanges
  image: registry.science.ru.nl/ilab/docker-build/rust-stable:main
  script:
    - cp -r global-client/ pubhubs
    - cp -r hub-client/ pubhubs
    - cd pubhubs
#    No pretty reporting for now unfortunatly, see https://github.com/rust-lang/rust/issues/49359
#    (more background:  https://github.com/rust-lang/rust/pull/109044), when JSON output is finalized let's turn reporting
#    back on.
#    - env RUST_BACKTRACE=full cargo +stable test --no-fail-fast -- -Z unstable-options --format json | gitlab-report -p test > report.xml
    - env RUST_BACKTRACE=full cargo +stable test --no-fail-fast
  artifacts:
    reports:
      junit: pubhubs/report.xml
    expire_in: 1 week
  cache:
    key: "${CI_COMMIT_REF_NAME}-${CI_JOB_NAME}"
    paths:
      - pubhubs/target/

rust-cargo-deny:
  stage: build
  only: *rustchanges
  tags:
    - docker
  image: registry.science.ru.nl/ilab/docker-build/rust-stable:main
  script:
    - cd pubhubs
    - cargo deny check

build-pubhubs-image:
  stage: build-images
  only:
    refs:
      - main
      - stable
    <<: *rustchanges
  needs:
    - job: rust-unit-test
      optional: true
    - job: rust-cargo-deny
      optional: true
    - job: rust-clippy
      optional: true

  tags:
    - docker
  image: docker:stable
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs:${CI_COMMIT_REF_NAME}
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --build-arg "CARGO_FEATURES=${CARGO_FEATURES}" -f pubhubs/Dockerfile -t ${CONTAINER_IMAGE} .
    - docker push ${CONTAINER_IMAGE}

deploy-main-phc:
  stage: deploy
  only:
    refs:
      - main
    <<: *phc_image_changes
  needs: 
    - build-pubhubs-image
  environment: $CI_COMMIT_REF_NAME
  tags: [docker]
  image: ubuntu:rolling
  script:
    - cd pubhubs
    - apt update
    - apt install -y openssh-client
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@$ILAB_VM_TRIGGER_UPDATE_HOST_MAIN -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-pubhubs-main

deploy-stable-phc:
  stage: deploy
  only:
    refs:
      - stable
    <<: *phc_image_changes
  needs: 
    - build-pubhubs-image
  environment: $CI_COMMIT_REF_NAME
  tags: [docker]
  image: ubuntu:rolling
  script:
    - cd pubhubs
    - apt update
    - apt install -y openssh-client
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@$ILAB_VM_TRIGGER_UPDATE_HOST_STABLE -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-pubhubs-stable

start-test-setup-unit-test:
  stage: build
  <<: *exceptdoc
  tags:
    - docker
  image: python:latest
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  script:
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - python3 start_test_setup.py test

hub-unit-test: # This job runs in the test stage.
  stage: build
  only:
    *hubchanges
  tags:
    - docker
  image: python:latest
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  before_script: #install libpepcli
    - python --version # For debugging
    - pip install virtualenv
    - virtualenv venv
    - source venv/bin/activate
    - pip install unittest-xml-reporting
    - apt update && apt install -y lsb-release
    - sh -c 'printf "deb http://packages.bitpowder.com/debian-%s main core\n" `lsb_release -cs`' | tee /etc/apt/sources.list.d/bitpowder-repo.list
    - curl -L https://bitpowder.com/packages/linux-packages.gpg | tee /etc/apt/trusted.gpg.d/bitpowder.asc
    - apt-get update && apt-get install -y pepcli
  script:
    - cd pubhubs_hub
    - pip install --upgrade -r requirements.txt
    - python -m xmlrunner discover -p '*_test.py' --output-file report.xml
    # Pip's cache doesn't store the python packages
    # https://pip.pypa.io/en/stable/reference/pip_install/#caching
    #
    # If you want to also cache the installed packages, you have to install
    # them in a virtualenv and cache it as well.
  cache:
    paths:
      - pubhubs_hub/.cache/pip
      - pubhubs_hub/venv/
  artifacts:
    reports:
      junit: pubhubs_hub/report.xml
    expire_in: 1 week

build-image-hub:
  stage: build-images
  only:
    refs:
      - main
      - stable
    <<: *hubchanges
  needs:
    - hub-unit-test
  tags:
    - docker
  image: docker:stable
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs_hub:${CI_COMMIT_REF_NAME}
  script:
    - cd pubhubs_hub
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - DOCKER_BUILDKIT=1 docker build -t ${CONTAINER_IMAGE} .
    - docker push ${CONTAINER_IMAGE}

deploy-main-hub:
  stage: deploy
  only:
    refs:
      - main
    <<: *hubchanges
  needs: &mainhubdeployneeds
    - build-image-hub
  environment: $CI_COMMIT_REF_NAME
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd pubhubs_hub
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@$ILAB_VM_TRIGGER_UPDATE_HOST_MAIN -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub-matrix-main

deploy-stable-hub:
  stage: deploy
  only:
    refs:
      - stable
    <<: *hubchanges
  needs: *mainhubdeployneeds
  environment: $CI_COMMIT_REF_NAME
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd pubhubs_hub
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@$ILAB_VM_TRIGGER_UPDATE_HOST_STABLE -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub-matrix-stable

hubclient-unit-test:
  stage: build
  only: *hubclientchanges
  tags: [docker]
  image: node:latest
  before_script:
    - cd hub-client
    - npm ci --cache .npm --prefer-offline
  script:
    - npm run test
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .npm/

build-hubclient:
  stage: build-images
  only:
    refs:
      - main
      - stable
    <<: *hubclientchanges
  needs:
    - hubclient-unit-test
  tags:
    - docker
  image: docker:stable
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs_client:${CI_COMMIT_REF_NAME}
  script:
    - cd hub-client
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - DOCKER_BUILDKIT=1 docker build -t ${CONTAINER_IMAGE} .
    - docker push ${CONTAINER_IMAGE}

build-hubclient2:
  stage: build-images
  only:
    refs:
      - main
    <<: *hubclientchanges
  needs:
    - hubclient-unit-test
  tags:
    - docker
  image: docker:stable
  variables:
    CONTAINER_IMAGE: ${CI_REGISTRY}/${CI_PROJECT_PATH}/pubhubs_client2:${CI_COMMIT_REF_NAME}
  script:
    - cd hub-client
    - cp ../cicd/temp_testhub/HubPage.vue src/pages/HubPage.vue
    - cp ../cicd/temp_testhub/logo.svg public/img/logo.svg
    - cp ../cicd/temp_testhub/logo.svg src/assets/pubhubs-logo.svg
    - cp ../cicd/temp_testhub/logo.svg src/assets/pubhubs-logo-dark.svg
    - cp ../cicd/temp_testhub/pubhubs-theme.js src/assets/pubhubs-theme.js
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - DOCKER_BUILDKIT=1 docker build -t ${CONTAINER_IMAGE} .
    - docker push ${CONTAINER_IMAGE}

deploy-main-hubclient:
  stage: deploy
  only:
    refs:
      - main
    <<: *hubclientchanges
  needs: &deployhubclientneeds
    - build-hubclient
    - job: build-hubclient2
      optional: true
  environment: $CI_COMMIT_REF_NAME
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd hub-client
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@$ILAB_VM_TRIGGER_UPDATE_HOST_MAIN -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub-element-main
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@$ILAB_VM_TRIGGER_UPDATE_HOST_MAIN -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub2-client-main

deploy-stable-client:
  stage: deploy
  only:
    refs:
      - stable
    <<: *hubclientchanges
  needs: *deployhubclientneeds
  environment: $CI_COMMIT_REF_NAME
  tags: [docker]
  image: registry.science.ru.nl/ilab/docker-build/ubuntu-iso:main
  script:
    - cd hub-client
    - chmod 600 $ILAB_VM_TRIGGER_UPDATE_KEY
    - ssh -o UserKnownHostsFile=$ILAB_VM_TRIGGER_UPDATE_KNOWN_HOSTS $ILAB_VM_TRIGGER_UPDATE_USER@$ILAB_VM_TRIGGER_UPDATE_HOST_STABLE -i $ILAB_VM_TRIGGER_UPDATE_KEY docker-testhub-element-stable

set-blueprints:
  stage: build
  only:
    refs:
      - main
    changes:
      - docs/blueprints/*
      - cicd/.gitlab-ci.yml
  tags: [docker]
  image: registry.gitlab.com/islandoftex/images/texlive:latest
  script:
    - cd docs/blueprints
    - arara main
  artifacts:
    paths:
      - ./docs/blueprints/main.pdf
