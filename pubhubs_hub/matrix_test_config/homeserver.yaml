# Configuration file for a PubHubs' hub's Synapse server
#
# NOTE to PubHubs developers:  if you change anything here, these changes are not pushed automatically
# to any of the production hubs.  If the changes are important, please add a check
# to the the 'ConfigChecker' module in modules/pubhubs/config_checker.py
#
modules:
  - module: conf.modules.pubhubs.ConfigChecker
    config: {
      disable_default_secrets_check: false
    }
  - module: conf.modules.pubhubs.DBMigration
  - module: conf.modules.pseudonyms.Pseudonym
#    Below is the example config for adding attribute based authentication to rooms, room id's will be different depending on your server.
#    Make sure to enable server_notices system_mxid_localpart (also in homeserver.yaml) as that will be the user making the waiting rooms.
  - module: conf.modules.pubhubs.YiviRoomJoiner
    config:
      {
#         3 lines belows are optional! For (internal) development purposes.
#         yivi_url: "http://<outside container>:8089",
#         yivi_client_url: "http://<outside container>:8089",
#         public_yivi_url: "http://<outside container>:8008/",

        # Client url is necessary for redirection to the room once allowed.
        client_url: "http://localhost:8800",
        # The global hub client where we need to allow the hubs' terms and conditions to be shown form as an embedded page.
        global_client_url: "http://localhost:8080"
      }

server_name: "testhub.matrix.host"
pid_file: /data/homeserver.pid
public_baseurl: http://localhost:8008

trusted_key_servers: []
report_stats: false

listeners:
  - port: 8008
    tls: false
    type: http
    x_forwarded: true
    resources:
      - names:
          - client
          - consent
        compress: false

allow_per_room_profiles: false

templates:
  custom_template_directory: /data/templates

federation_domain_whitelist: []
allow_profile_lookup_over_federation: false

database:
  name: sqlite3
  args:
    database: /data/homeserver.db

log_config: "/data/test_hub.log.config"

media_store_path: "/data/media_store"

enable_registration: false

macaroon_secret_key: "macaroon_key"
form_secret: "form_secret"
signing_key_path: "/data/testhub.signing.key"

oidc_providers:
- idp_id: pubhubs
  idp_name: "PubHubs ID provider"
  discover: true
  issuer: "http://host.docker.internal:8080"
  client_id: "testhub~TwE1w3BX-RrDRe7FFqkbRlkp4FiBh4cgtRwtrpmv7Gc="
  client_secret: "p7v7c_L_Eo0Clkx-fBvbGddHPkTEbR59oueM6XaKVYI="
  scopes: [openid]
  response_mode: form_post
  skip_verification: false
  user_mapping_provider:
    module: conf.modules.pseudonyms.OidcMappingProvider
    config: {
      libpubhubspath: /usr/lib/libpubhubs.so
    }

sso:
  client_whitelist:
    - http://localhost
#  - http://localhost:8081
#  - http://localhost:8008

update_profile_information: true

password_config:
  enabled: false

user_consent:
  template_dir: /data/templates/privacy
  version: 1.0
#  server_notice_content:
#    msgtype: m.text
#    body: >-
#      To continue using this homeserver you must review and agree to the
#      terms and conditions at %(consent_uri)s
#  send_server_notice_to_guests: true
  block_events_error: >-
    De regels en het privacybeleid zijn aangepast. Om gebruik te blijven
    maken van deze Hub zul je de nieuwe versie moeten lezen
    en accepteren via deze link %(consent_uri)s
  require_at_registration: true

server_notices:
  system_mxid_localpart: notices_user

# vim:ft=yaml
