$background-color: #001242;
$fa-font-path: "/fonts";
@import "node_modules/@fortawesome/fontawesome-free/scss/fontawesome";
@import "node_modules/@fortawesome/fontawesome-free/scss/regular";
@import "node_modules/@fortawesome/fontawesome-free/scss/solid";
@import "node_modules/@fortawesome/fontawesome-free/scss/brands";

$headings-font-weight: 400 !default;
$white:    #fff !default;
$gray-100: #f8f9fa !default;
$gray-150: #f1f1f1 !default;
$gray-200: #e9ecef !default;
$gray-300: #dee2e6 !default;
$gray-400: #ced4da !default;
$gray-500: #adb5bd !default;
$gray-550: #888 !default;
$gray-600: #6c757d !default;
$gray-700: #495057 !default;
$gray-800: #343a40 !default;
$gray-900: #212529 !default;
$black:    #000 !default;

$primary: #00466f !default;
$secondary: #07b !default;

$card-cap-bg: rgba(255, 255, 255, 0.1);

$body-bg: #fafafa !default;

$card-cap-color: white;
$card-cap-bg: $primary;
$hr-margin-y: 2rem;
$hr-opacity: 1;
$hr-height: 1.5pt;
$hr-color: $primary;
$warning: #ff9807;

$border-radius: .4rem;
$border-radius-sm: .3rem;
$border-radius-lg: .5rem;

$line-height-base:            1.75 !default;
$line-height-sm:              1.5 !default;
$line-height-lg:              2.25 !default;

$dropdown-link-hover-bg:            $gray-200;
$link-shade-percentage:             30%;

$modal-header-padding-y:            0.5rem;
$alert-padding-y:                   0.5rem;

$badge-font-size:                   .9em;

$utilities: (
        "max-width": (
                responsive: true,
                property: max-width,
                class: mw,
                values: (
                        10: 10%,
                        20: 20%,
                        25: 25%,
                        30: 30%,
                        40: 40%,
                        50: 50%,
                        60: 60%,
                        70: 70%,
                        75: 75%,
                        80: 80%,
                        90: 90%,
                        100: 100%,
                )
        ),
);

@import "node_modules/bootstrap/scss/functions";
@import "node_modules/bootstrap/scss/variables";
@import "node_modules/bootstrap/scss/mixins";

@import "node_modules/bootstrap/scss/bootstrap.scss";

@import "hljs-bitpowder";

:root {
  --fa-primary-color: #{$primary};
  --fa-secondary-color: #{$secondary};
  --bp-accent: #{$secondary};
  overflow-x: hidden;
  overflow-y: scroll;
}
// needed for sticky header + footer
// header needs sticky-lg-top
// container between header and footer needs: flex-shrink-0 flex-grow-1
// footer needs mt-auto
html {
  height: 100%;
}
// also needed for sticky header + footer
body {
  min-height: 100%;
}
.modal-open {
  /* Fix for javascript of bootstrap, that adds 8px padding when opening a modal (but we don't care about that because of the overflow-y: scroll in :root) */
  padding-right: 0px !important;
}
@each $color, $value in $theme-colors {
  .text-#{$color} {
    --fa-primary-color: #{$value};
    --fa-secondary-color: #{scale-color($value, $lightness: -10%)};
  }
}

@each $color, $value in $theme-colors {
  .accent-#{$color} {
    --bp-accent: #{$value};
    --bp-accent-bg: #{rgba($value, 7%)};
  }
}
.border-accent {
  border-color: var(--bp-accent, #{$secondary}) !important;
}
.text-accent {
  color: var(--bp-accent, #{$secondary}) !important;
}
.bg-accent {
  background-color: var(--bp-accent, #{$secondary}) !important;
}

@media screen {
  header {
    background-color: $primary;
    white-space: nowrap;
    form {
      background-color: rgba(255,255,255,0.15);
      border-radius: $border-radius;
    }
    form > * {
      background-color: transparent !important;
      color: white !important;
      border: none !important;
      box-shadow: none !important;
    }
    input:active::placeholder,
    input::placeholder {
      color: rgba(255, 255, 255, 0.5) !important;
    }
    input::selection {
      background-color: white;
      color: $primary;
    }
    & + nav.body-header {
      background-color: $secondary;
    }
  }
}

footer {
  background-color: $gray-150;
  box-shadow: 0 50vh 0 50vh $gray-150;
  @media print {
    display: none;
  }
}

.navbar-dark .navbar-toggler {
  border: none;
}
.navbar-toggler:focus {
  box-shadow: none;
}

img.user {
  max-width: none;
  height: 2rem;
  border-radius: 1rem;
  margin-top: -0.2rem;
}

@media print {
  body {
    background-color: transparent;
    /* this affects the margin on the content before sending to printer */
    margin: 0 20mm !important;
    padding: 0;
    font-size: 80%;
  }
  @page  {
    size: auto;   /* auto is the initial value */
    /* this affects the margin in the printer settings */
    /*margin: 25mm 25mm 25mm 25mm;*/
    margin: 20mm 0;
  }
  .container {
    max-width: 100% !important;
  }
  h1,h2,h3,h4,h5,h6 {
    page-break-after: avoid;
  }
  h1 {
    font-size: 2.0rem;
  }
  h2 {
    font-size: 1.8rem;
  }
  h3 {
    font-size: 1.6rem;
  }
  h4 {
    font-size: 1.4rem;
  }
  h5 {
    font-size: 1.2rem;
  }
  h6 {
    font-size: 1.0rem;
  }
  hr {
    visibility: hidden;
    page-break-after: always;
    border-top: none;
    margin: 0;
  }
}

code, strong, em {
  color: var(--bp-accent, #{$secondary});
}
.text-light, .text-white {
  code, strong, em {
    color: white !important;
  }
}
.badge {
  margin-right: 0.25rem;
  font-style: normal;
}
mark {
  @extend .badge;
  background-color: var(--bp-accent, #{$secondary});
  .fa, .fas, .fal, .far, .fab {
    float: left;
    margin-right: 0.5em;
  }
}
@mixin badge-outline-variant($color) {
  border: 1px solid $color;
  color: $color;
}
@each $color, $value in $theme-colors {
  .badge-outline-#{$color} {
    @include badge-outline-variant($value);
  }
}
abbr {
  @extend .badge;
  @extend .badge-outline-secondary;
  @extend .border-accent;
  @extend .text-accent;
}

code {
  padding: 0;
  background-color: transparent;
  border-radius: 0;
  letter-spacing: -0.5pt;
}
textarea.code {
  font-family: $font-family-monospace;
}
pre {
  overflow: hidden;
  & > code {
    white-space: pre-wrap;
  }
}
pre > code, .accentwrap, .syntaxhighlighter {
  display: block;
  background-color: var(--bp-accent-bg, rgba(0,0,0,0.03)) !important;
  @media print {
    background-color: transparent !important;
    page-break-inside: avoid;
  }
  padding: 1rem;
  position: relative;
  &::before {
    border: 1.5pt solid var(--bp-accent, #{$secondary});
    content: "";
    height: 0.3rem;
    display: block;
    border-bottom: none;
    margin-bottom: -0.3rem;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
  }
  &::after {
    content: "";
    height: 0.3rem;
    display: block;
    border: 1.5pt solid var(--bp-accent, #{$secondary});
    border-top: none;
    margin-top: -0.3rem;
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
  }
}

.accentbar {
  background-color: var(--bp-accent-bg, rgba(0,0,0,0.03)) !important;
  padding: 0.5rem 1rem;
  @include media-breakpoint-up(md) {
    margin-left: -1rem;
    margin-right: -1rem;
  }
  @media print {
    background-color: transparent !important;
    padding: 0.25rem 0.75rem;
    margin-left: -0.5rem;
    margin-right: -0.5rem;
    page-break-inside: avoid;
  }
  position: relative;

  p:last-child {
    margin-bottom: 0;
  }
  &::before {
    border: 1.5pt solid var(--bp-accent, #{$secondary});
    content: "";
    width: 0.3rem;
    display: block;
    border-right: none;
    margin-right: -0.3rem;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 0;
  }
  &::after {
    border: 1.5pt solid var(--bp-accent, #{$secondary});
    content: "";
    width: 0.3rem;
    display: block;
    border-left: none;
    margin-left: -0.3rem;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
  }
}

table::before {
  content: "";
  display: block;
}
table {
  margin: auto;
}
table thead {
  color: $primary;
}
table td { // also applies to source code gutter
  min-width: 2.5rem;
}

h1,h2,h3 {
  color: $primary;
  text-align: left;
  padding: 0em;
  > a {
    color: inherit;
    font-weight: inherit;
  }
  p + &, ul + &, address + &, div.spacer + & {
    margin-top: 1.25em;
  }
  &:first-child {
    margin-top: 0;
  }
}

ol.alpha {
  list-style-type: lower-alpha;
  &.upper {
    list-style-type: upper-alpha;
  }
}

ol.roman {
  list-style-type: lower-roman;
  &.upper {
    list-style-type: upper-roman;
  }
}

ol,
ul,
dl {
  & > li > p {
    margin-bottom: 0;
  }
}
ul.accent, ol.accent {
  list-style-type: none !important;
  padding-left: 2.75rem;
  padding-right: 0;
  & > li {
    & > p {
      display: inline-block;
    }
  }
  & > li:before {
    content: "â€•";
    font-weight: normal;
    width: 2rem;
    margin-right: 0.75rem;
    margin-left: -2.75rem;
    display: inline-block;
  }
  p + & {
    margin-top: -1rem;
  }
}
ul.accent {
  & > li:before {
    color: var(--bp-accent, #{$secondary});
  }
}
ol.accent {
  counter-reset: item;
  & > li:before {
    text-align: center;
    content: counter(item);
    counter-increment: item;
    @extend .badge;
    background-color: var(--bp-accent, #{$secondary});
    font-size: 80%;
    margin-top: 0.25rem;
    vertical-align: top;
  }
  &.roman > li:before {
    content: counter(item, lower-roman);
  }
  &.roman.upper > li:before {
    content: counter(item, upper-roman);
  }
  &.alpha > li:before {
    content: counter(item, lower-alpha);
  }
  &.alpha.upper > li:before {
    content: counter(item, upper-alpha);
  }
}

@media screen {
  hr {
    color: var(--bp-accent, #{$secondary});
    position: relative;
    margin-left: -1rem;
    margin-right: -1rem;
    opacity: 1;
    overflow: visible;
    &::before {
      border-left: 1.5pt solid var(--bp-accent, #{$secondary});
      content: "";
      width: 0.3rem;
      display: block;
      margin-right: -0.3rem;
      position: absolute;
      top: -0.3rem;
      left: 0;
      bottom: 0;
    }
    &::after {
      border-right: 1.5pt solid var(--bp-accent, #{$secondary});
      content: "";
      width: 0.3rem;
      display: block;
      margin-left: -0.3rem;
      position: absolute;
      top: 0;
      right: 0;
      bottom: -0.3rem;
    }
  }
}

blockquote {
  @extend .accentbar;
  & > p:first-child > mark:first-child {
    //min-width: 10rem;
  }
}
figure {
  & > *:first-child {
    @extend .accentwrap;
    text-align: center;
    &.figure-photo {
      padding: 0;
    }
  }
  figcaption {
    max-width: 80%;
    margin: 0 auto;
    text-align: center;
  }
}
.btn.with-icon {
  display: inline-flex;
  align-items: center;
  & > .icon {
    width: 1.25em;
  }
  & > .text {
    margin-left: 1em;
    text-align: center;
    flex-grow: 1;
  }
}
.container {
  & > ul {
    @extend .accent;
  }
  & > ol {
    @extend .accent;
  }
}

@media only screen and (min-width: 769px) {
  .container {
    & > p {
      & > img:first-child {
        float: right;
        clear: right;
        max-width: 40%;
        margin-left: 1rem;
        margin-bottom: 1rem;
      }
    }
  }
  p > img.float {
    float: right;
    clear: right;
    max-width: 40%;
    margin-left: 1rem;
    margin-bottom: 1rem;
  }
}

.breadcrumbs a {
  text-decoration: none;
}

.img-cover {
  height: 100%;
  width: 100%;
  max-width: 100%;
  max-height: 100%;
  object-fit: cover;
}
.img-contain {
  height: 100%;
  width: 100%;
  max-width: 100%;
  max-height: 100%;
  object-fit: contain;
}
.object-fit-cover {
  object-fit: cover;
}
.object-fit-contain {
  object-fit: contain;
}
@for $i from 1 through 5 {
  .max-lines-#{$i} {
    -webkit-line-clamp: $i;
    -webkit-box-orient: vertical;
    display: -webkit-box;
    text-overflow: ellipsis;
    overflow: hidden;
  }
}

/*****/
nav.body-nav, header.body-header {
  z-index: 1;
}
nav.body-nav {
  z-index: 1;
  nav.actions {
    line-height: 2;
  }
}
.action {
  display: none;
}
nav.actions {
  a {
    text-decoration: none !important;
    color: white !important;
  }
  & > a.action {
    display: inline-block;
    & .text {
      @media screen and (max-width: 768px) {
        display: none;
      }
    }
  }
}
@media screen and (max-width: 768px) {
  nav.actions > a.action .text {
  }
}

@-moz-keyframes spin { 100% { -moz-transform: rotate(360deg); } }
@-webkit-keyframes spin { 100% { -webkit-transform: rotate(360deg); } }
@keyframes spin { 100% { -webkit-transform: rotate(360deg); transform:rotate(360deg); } }
